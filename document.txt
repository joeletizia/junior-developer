# How to be a Junior Developer

Being a junior developer is hard. Many people aren't necessarily cut out for being a developer, but if you also consider the fact that many software development shops have brutally honest performance feedback schemes, it begins to seem that no one is truly cut out to be a software developer. Hearing where you need work and what you're lacking is tough on anybody. Learning how to embrace the feedback, and not looking at it as a personal attack is essential, and a key sign that you are willing to grow personally. 

As a junior developer, you're expected to always be progressing. This can be excruciatingly draining during the first year or so. There will be many weeks where you will feel as if you've learned nothing, or even regressed. This is completely normal. Many of the senior people I work and socialize with have said as much of their own development over their careers. But along with that, there does seem to be a few constants among all the successful developers that I know that allowed them to thrive. 

Before we talk about how to succeed in your position as a junior developer, we first have to talk about the tricks and traits that allow you to become one. These may seem obvious, but you need to do an honest assessment of your skills in these areas before you start expecting to land those jobs.

### Embrace your CS Fundamentals

I have iterviewed all over the place. Some companies have ridiculous puzzles about finding a close approximation of how many grains of sand are on the Earth (you probably don't want to work here) while others will sit you down next to them and work on a project out of their backlog. Regardless of how the interview is done, the one constant through all of them will most likely necessitate fundamental Computer Scienece knowledge. Things like basic data structures and algorithms and object oriented design are essential in most interviews. 

For a junior position, places outside of Google and Facebook aren't going to probe you for data structures that you probably didn't learn in school like advanced graphs, but you'll certainly want to be able to know where a hash is more advantageous over a linked list or an array. You will certainly want to know the difference between a standard tree and a binary search tree.

I've been shopping around for data structures books for a few months. It seems that there is almost a unanimous consensus for Introduction to Algorithms (also known as the CLRS after the authors) to be the de facto standard. To this point, I find myself to be in agreement with those that gave it such high praise.

### Attitude is Everything

The attitude with which you approach your position is (at some companies) more important than the state of your current skill set. If you are difficult to work with, have an abrasive personality, or are in some other way incapable of being a part of a team, your skill set can become inconsequential. 

Don't be affraid of not being the best developer on your team. The people I work with code circles around me on a daily basis. However, you can still be a contributing member of a team as long as you have a good attitude and are continually progressing. 

On my current team, we use a somewhat unique approach to interviewing. It's strikingly simpleâ€¦ but fact remains that is unique none-the-less. We simply invite candidates that pass a phone screen to complete a simple pair programming exercise with one of our developers using test-driven-development. There are no tricks, no riddles, and no counting grains of sand. This gives us two data points:

1. Whether or not they have enough of a theoretical Computer Science background.
2. Whether or not they personable enough to work in a team to accomplish a common task. 

We tend to keep it to an hour in order to save the candidate time because the next round is a full day of pairing with 2-3 of our developers. The interview is tagging along with your partner and tackling real features out of our backlog. This process is as much a technical assessment as it is a deep dive into the candidates attitude. Having an inquisitive personality, a calm yet up beat demeanor, and even a sense of humor are all things that employers are looking for in their junior hires. If this sounds a bit like blind dating, you're not too far off. This doesn't mean that you shouldn't be assertive, however. One thing that may help people stand out is having a set of opinions on best practices that you've developed over the course of your experience. Being able to express these opinions in a way that is both assertive and well mannered is a great combination. By doing that, you've shown that you not only have good skills, but are a great teammate.

### Be Social

Along with the above segment on having a good attitude, our field now has a required social aspect to it. Keeping up with the latest trends is imperative to maintaining sharp skills and keeping yourself up to date. If you are in a city/area with a very active tech scene, there are bound to be a few interesting meetups in your area. Be sure to drop in occasionaly. If you make yourself known, one of those people might just be able to land you your next job. 